//
//  CatalogRouter.swift
//  TestExample
//
//  Created by Игорь Дикань on 19.01.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import PanModal

protocol CatalogRoutingLogic {
    func routeToProductBottomSheet(_ model: CatalogViewModel.ProductModel)
    func passingProduct(_ product: CatalogViewModel.ProductModel)
}

protocol CatalogDataPassing {
    var dataStore: CatalogDataStore? { get }
}

final class CatalogRouter: NSObject {
    
    // MARK: - External vars
    weak var viewController: CatalogViewController?
    weak var dataStore: CatalogDataStore?
}

// MARK: - Routing logic
extension CatalogRouter: CatalogRoutingLogic {
    
    func routeToProductBottomSheet(_ model: CatalogViewModel.ProductModel) {
        guard let vc = R.storyboard.produtBottomSheet.produtBottomSheetViewController() else {
            return
        }
        vc.router?.dataStore?.product = model
        viewController?.presentPanModal(vc)
    }
    
    func passingProduct(_ product: CatalogViewModel.ProductModel) {
        guard let vc = R.storyboard.card.cardViewController() else {
            return
        }
        vc.router?.dataStore?.products.append(product)
        
    }
}

// MARK: - Data passing
extension CatalogRouter: CatalogDataPassing {
    
}
