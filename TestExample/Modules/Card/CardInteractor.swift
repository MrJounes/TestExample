//
//  CardInteractor.swift
//  TestExample
//
//  Created by Игорь Дикань on 20.01.2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RealmSwift

protocol CardBusinessLogic {
    func fetchProducts()
}

protocol CardDataStore: class {
    var products: [CatalogViewModel.ProductModel] { get set }
}

final class CardInteractor {
    
    // MARK: - External vars
    var presenter: CardPresentationLogic?
    var worker: CardWorker?
    public var products: [CatalogViewModel.ProductModel] = []
    
    // MARK: - Internal vars
    private let realmInstance = RealmService.shared
    
}

// MARK: - Business logic
extension CardInteractor: CardBusinessLogic {
    
    func fetchProducts() {
        let productsArray = Array(realmInstance.realm.objects(ProductRealmModel.self))
        let products = productsArray.filter { (product) -> Bool in
            let key = product.productId
            return UserDefaults.standard.integer(forKey: key) != 0
        }
        presenter?.presentProducts(with: products)
    }
}

// MARK: - Data store
extension CardInteractor: CardDataStore {
    
}
